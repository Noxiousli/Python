string是 immutable
But lists and strings are different in an important way. A list value is a mutable data type: 
It can have values added, removed, or changed. However, a string is immutable: It cannot be changed.
list是mutable
一、string
>>> name = 'Zophie' 
>>> name[0] 
'Z'
>>> name[-2]
'i' 
>>> name[0:4]
'Zoph'
>>> 'Zo' in name 
True 
>>> 'z' in name 
False 
>>> 'p' not in name 
False
>>> for i in name: ##########把list name里的string都打印出来
    print('* * * ' + i + ' * * *')
* * * Z * * *
* * * o * * *
* * * p * * * 
* * * h * * * 
* * * i * * *
* * * e * * *
二、string里的值的改变 
1.不可以使用index直接改变
例如把a换成the
>>> name = 'Zophie a cat' 
>>> name[7] = 'the'
错误
正确如下
>>> name = 'Zophie a cat' 
>>> newName = name[0:7] + 'the' + name[8:12]
>>> newName 
'Zophie the cat'

三、The Tuple Data Type
与list相似，但是有两个不同
1.用括号，把value扩起来
例如 spam（1，2，）
2.是不可变的immutable
只有一个value时，要在后面加逗号，不然Python大哥会把它当成其他数据类型
>>> x = (1)
>>> type((x))
<class 'int'>
>>> x = (1,)
>>> type((x))
<class 'tuple'>
>>> 

四、list（）与tuple（）数据转换
1.list
>>> list((1,2,3))  #转换tuple成list
[1, 2, 3]
>>> list('Hello')  #转换string成list
['H', 'e', 'l', 'l', 'o']
>>> list(1)      #不能转换int
Traceback (most recent call last):
  File "<pyshell#27>", line 1, in <module>
    list(1)
TypeError: 'int' object is not iterable
>>> 
2.tuple
>>> tuple([[1],[2,3]]) #list转tuple
([1], [2, 3])
>>> 
>>> tuple('hell')  #string转tuple
('h', 'e', 'l', 'l')
>>> 

